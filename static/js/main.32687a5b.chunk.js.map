{"version":3,"sources":["images/eye.svg","images/eye-slash.svg","components/LogIn/LogIn.jsx","pages/StartPage.js","context.js","components/ModalChatCreate/ModalChatCreate.jsx","components/ChatOne/ChatOne.jsx","components/Welcome/Welcome.jsx","pages/CreateChat.js","components/User/User.jsx","components/Message/Message.jsx","components/MessageAnswer/MessageAnswer.jsx","components/MessageForm/MessageForm.jsx","components/Chat/Chat.jsx","pages/ChatPage.js","App.js","index.js"],"names":["LogIn","useState","validateAfterSubmit","setValidateAfterSubmit","visiblePassword","setVisiblityPassword","validationsShema","yup","shape","email","required","password","min","history","useHistory","className","initialValues","validateOnBlur","validateOnChange","validationSchema","onSubmit","push","values","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","classNames","type","name","placeholder","value","onChange","onBlur","onClick","visiblity","src","eye","alt","eyeSlash","disabled","StartPage","UserContext","React","createContext","ChatContext","ModalChatCreate","active","setActive","props","useContext","handlerChatName","chat","handlerChatDiscription","handlerChatId","inputChatName","setInputChatName","inputChatDiscription","setInputChatDiscription","element","stopPropagation","action","event","preventDefault","uuidv4","id","Math","floor","random","chatName","chatDiscription","target","ChatOne","Welcome","modalActive","setModalActive","chats","setChats","map","chatOne","test","newChat","CreateChat","User","modalUserActive","setModalUserActive","userName","userLastName","handlerUserName","handlerUserLastName","Message","message","user","text","MessageAnswer","MessageForm","input","setInput","wrap","Chat","messages","setMessages","cache","useRef","CellMeasurerCache","fixedWidth","defaultHeight","setUser","Provider","to","style","width","height","rowHeight","current","deferredMeasurementCache","rowCount","length","rowRenderer","key","index","parent","columnIndex","rowIndex","newMessage","ChatPage","App","setChat","console","log","prevChat","valueId","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32687a5b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eye.8e7e265e.svg\";","export default __webpack_public_path__ + \"static/media/eye-slash.0bed875c.svg\";","import React, { useState } from 'react';\nimport { Formik } from \"formik\";\nimport classNames from \"classnames\";\nimport * as yup from \"yup\";\nimport eye from \"../../images/eye.svg\";\nimport eyeSlash from \"../../images/eye-slash.svg\";\nimport { useHistory } from 'react-router-dom';\nimport './LogIn.scss';\n\nexport function LogIn() {\n  const [validateAfterSubmit, setValidateAfterSubmit] = useState(false);\n  const [visiblePassword, setVisiblityPassword] = useState(false);\n\n  const validationsShema = yup.object().shape({\n    email: yup.string().email(\"Email address is invalid\").required(\"Email required\"),\n    password: yup.string().required('This field is required.')\n      .min(6, 'Password should be 6 chars minimum.'),\n  });\n\n  let history = useHistory();\n\n  return (\n    <div className=\"container\">\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validateOnBlur={false}\n        validateOnChange={validateAfterSubmit}\n        validationSchema={validationsShema}\n        onSubmit={() => { history.push('/welcome') }}\n      >\n        {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\n          <form\n            className=\"form\"\n            onSubmit={handleSubmit}\n          >\n            <div className=\"form__inputs\">\n              <label className=\"form__label\">E-mail</label>\n              <input\n                className={classNames(\"form__input\", {\n                  \"form__input-err\": errors.email && touched.email,\n                })}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.email && touched.email && <p className=\"form__input-error\">{errors.email}</p>}\n            </div>\n            <div className=\"form__inputs\">\n              <label className=\"form__label\">Create Password</label>\n              <input\n                className={classNames(\"form__input\", {\n                  \"form__input-err\": errors.password && touched.password,\n                })}\n                type={visiblePassword ? \"text\" : \"password\"}\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <div\n                onClick={() => setVisiblityPassword(visiblity => !visiblity)}\n                className=\"form__input-icon\"\n              >\n                {visiblePassword\n                  ? <img src={eye} alt=\"show\" />\n                  : <img src={eyeSlash} alt=\"hide\" />\n                }\n              </div>\n              {errors.password && touched.password && <p className=\"form__input-error\">{errors.password}</p>}\n            </div>\n            <button\n              disabled={!isValid && !dirty}\n              className=\"form__input-btn\"\n              type=\"submit\"\n              onClick={() => {\n                setValidateAfterSubmit(true);\n              }}\n            >\n              Login\n            </button>\n          </form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React from 'react';\nimport { LogIn } from '../components/LogIn';\n\nexport function StartPage() {\n  return (\n    <>\n      <LogIn />\n    </>\n  )\n}","import React from 'react';\n\nexport const UserContext = React.createContext();\nexport const ChatContext = React.createContext();","import React, { useState, useContext } from 'react';\n// import { useHistory } from 'react-router-dom';\nimport { ChatContext } from '../../context';\nimport { v4 as uuidv4 } from 'uuid';\nimport \"./ModalChatCreate.scss\";\n\nexport function ModalChatCreate({ active, setActive, ...props }) {\n  const { chat, handlerChatName, handlerChatDiscription, handlerChatId } = useContext(ChatContext);\n  const [inputChatName, setInputChatName] = useState('');\n  const [inputChatDiscription, setInputChatDiscription] = useState('');\n\n  const handleChangeChatName = (event) => {\n    setInputChatName(event.target.value);\n  };\n\n  const handleChangeChatDiscription = (event) => {\n    setInputChatDiscription(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handlerChatName(inputChatName);\n    handlerChatDiscription(inputChatDiscription);\n    handlerChatId(uuidv4());\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      chatName: inputChatName,\n      chatDiscription: inputChatDiscription\n    });\n    setInputChatName('');\n    setInputChatDiscription('');\n  };\n\n  return (\n    <div\n      className={active ? \"modal modal--active\" : \"modal\"}\n      onClick={() => setActive(false)}\n    >\n      <div\n        className={active ? \"modal__content modal__content--active\" : \"modal__content\"}\n        onClick={element => element.stopPropagation()}\n      >\n        <h2 className=\"modal__title\">New channel</h2>\n        <form\n          action=\"\"\n          className=\"form\"\n          onSubmit={handleSubmit}\n        >\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={inputChatName}\n            onChange={handleChangeChatName}\n            placeholder=\"Channel tittle...\"\n            required\n          />\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={inputChatDiscription}\n            onChange={handleChangeChatDiscription}\n            placeholder=\"Channel description\"\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"modal__button\"\n          >\n            Create\n          </button>\n        </form>\n        <button\n          className=\"modal__button modal__button--close\"\n          type=\"button\"\n          onClick={() => setActive(false)}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  )\n};","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ChatContext } from '../../context';\n\nexport function ChatOne() {\n  const { chat } = useContext(ChatContext);\n  let history = useHistory();\n\n  return (\n    <div\n      className=\"x\"\n      onClick={() => history.push('/chat/:chatId')}\n    >\n      <h3 className=\"x\">\n        {chat.chatName}\n      </h3>\n      <p className=\"x\">\n        {chat.chatDiscription}\n      </p>\n    </div>\n  )\n};","import React, { useState, useContext } from 'react';\nimport { ModalChatCreate } from '../ModalChatCreate';\nimport { ChatOne } from '../ChatOne';\nimport { ChatContext } from '../../context';\nimport './Welcome.scss';\n\nexport function Welcome() {\n  const [modalActive, setModalActive] = useState(false);\n  const [chats, setChats] = useState([]);\n  const { chat } = useContext(ChatContext);\n\n  const addChat = () => {\n    // eslint-disable-next-line no-mixed-operators\n    if (!chat.chatName || /^\\s*$/.test(chat.chatName) && !chat.chatDiscription || /^\\s*$/.test(chat.chatDiscription)) {\n      return;\n    };\n\n    const newChat = [chat, ...chats];\n\n    setChats(newChat);\n  };\n\n  return (\n    <div className=\"container\">\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={() => setModalActive(true)}\n      >\n        Create a channel\n      </button>\n      <h1>Welcome to awesome chat</h1>\n      <div className=\"x\">\n        {chats.map((chatOne) => (\n          <ChatOne\n            key={chat.id}\n            chatOne={chatOne}\n          />\n        ))}\n      </div>\n      <ModalChatCreate\n        onSubmit={addChat}\n        active={modalActive}\n        setActive={setModalActive}\n      />\n    </div>\n  )\n}\n\n","import React from 'react';\nimport { Welcome } from '../components/Welcome/Welcome';\n\nexport function CreateChat() {\n  return (\n    <>\n      <Welcome />\n    </>\n  )\n}","import React, { useContext } from 'react';\nimport { UserContext } from '../../context';\nimport \"./User.scss\";\n\nexport function User({ modalUserActive, setModalUserActive }) {\n  const { userName, userLastName, handlerUserName, handlerUserLastName } = useContext(UserContext);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  return (\n    <div\n      className={modalUserActive ? \"user user--active\" : \"user\"}\n      onClick={() => setModalUserActive(false)}\n    >\n      <div\n        className={modalUserActive ? \"modal__content modal__content--active\" : \"modal__content\"}\n        onClick={element => element.stopPropagation()}\n      >\n        <h2 className=\"modal__title\">User</h2>\n        <form\n          action=\"\"\n          className=\"form\"\n          onSubmit={onSubmit}\n        >\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={userName}\n            onChange={handlerUserName}\n            placeholder=\"Name\"\n            required\n          />\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={userLastName}\n            onChange={handlerUserLastName}\n            placeholder=\"Last name\"\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"modal__button\"\n          >\n            Create\n          </button>\n        </form>\n        <button\n          className=\"modal__button modal__button--close\"\n          type=\"button\"\n          onClick={() => setModalUserActive(false)}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  )\n};","import React, { useContext } from 'react';\nimport { UserContext } from '../../context';\nimport './Message.scss';\n\nexport function Message({ message }) {\n  const { user } = useContext(UserContext);\n\n  return (\n    <div\n      className=\"chat__message\"\n    >\n      <p className=\"chat__message--user\">\n        {user.userName === '' ? 'User1' : user.userName}\n      </p>\n      <p className=\"chat__message--info\">\n        {message.text}\n      </p>\n    </div>\n  )\n};","import React, { useContext } from 'react';\nimport { UserContext } from '../../context';\nimport './MessageAnswer.scss';\n\nexport function MessageAnswer() {\n  const { user } = useContext(UserContext);\n\n  return (\n    <div\n      className=\"chat__message\"\n    >\n      <p className=\"chat__message--user\">\n        {user.userName === '' ? 'User1' : user.userName}\n      </p>\n      <p className=\"chat__message--info\">\n        {`hello ${user.userName === '' ? 'User1' : user.userName}`}\n      </p>\n    </div>\n  )\n};","import React, { useState } from 'react';\nimport './MessageForm.scss'\n\nexport function MessageForm({ ...props }) {\n  const [input, setInput] = useState('');\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n  return (\n    <form\n      action=\"\"\n      className=\"chat__form\"\n      onSubmit={handleSubmit}\n    >\n      <textarea\n        className=\"chat__input--text\"\n        value={input}\n        onChange={handleChange}\n        wrap=\"soft | hard\"\n      >\n      </textarea>\n      <button\n        className=\"chat__btn\"\n        onClick={handleSubmit}\n      >\n        Send\n      </button>\n    </form>\n  )\n}\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { User } from '../User';\nimport { Message } from '../Message';\nimport { MessageAnswer } from '../MessageAnswer';\nimport { MessageForm } from '../MessageForm';\nimport { FaUserCog } from 'react-icons/fa';\nimport { UserContext } from '../../context';\nimport { ChatContext } from '../../context';\n\nimport {\n  List,\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n} from \"react-virtualized\";\n\nimport './Chat.scss';\n\nexport function Chat() {\n  const [modalUserActive, setModalUserActive] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const cache = React.useRef(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      defaultHeight: 100,\n    })\n  );\n\n  const addMessage = (message) => {\n    if (!message.text || /^\\s*$/.test(message.text)) {\n      return;\n    };\n\n    const newMessage = [...messages, message];\n\n    setMessages(newMessage);\n  };\n\n  const [user, setUser] = useState({\n    userName: '',\n    userLastName: '',\n  });\n  const handlerUserName = (event) => setUser({ ...user, userName: event.target.value });\n  const handlerUserLastName = (event) => setUser({ ...user, userLastName: event.target.value })\n\n  const { chat } = useContext(ChatContext);\n\n\n\n  return (\n    <UserContext.Provider value={{ user, handlerUserName, handlerUserLastName }}>\n      <div className=\"chat\">\n        <div className=\"chat__header\">\n          <h2 className=\"chat__title\">\n            {chat.chatName === '' ? 'Chat' : chat.chatName}\n          </h2>\n          <div className=\"chat__user\">\n            <FaUserCog\n              onClick={() => setModalUserActive(true)}\n              className='icon-style'\n            />\n            <span>{user.userName === '' ? 'User1' : user.userName}</span>\n          </div>\n\n          <Link\n            to='/'\n            className='chat__btn'\n          >\n            Logout\n          </Link>\n        </div>\n        <div className=\"chat__input\">\n          <div style={{ width: \"100%\", height: \"100vh\" }}>\n            <AutoSizer>\n              {({ width, height }) => (\n                <List\n                  width={width}\n                  height={height}\n                  rowHeight={cache.current.rowHeight}\n                  deferredMeasurementCache={cache.current}\n                  rowCount={messages.length}\n                  rowRenderer={({ key, index, style, parent }) => {\n                    const message = messages[index];\n                    return (\n                      <CellMeasurer\n                        key={key}\n                        cache={cache.current}\n                        parent={parent}\n                        columnIndex={0}\n                        rowIndex={index}\n                      >\n                        <div style={style}>\n                          <Message\n                            message={message}\n                            key={message.id}\n                          />\n                          {Message\n                            ? <MessageAnswer />\n                            : null}\n                        </div>\n                      </CellMeasurer>\n                    );\n                  }}\n                />\n              )}\n            </AutoSizer>\n          </div>\n          {/* {messages.map((message) => (\n            <Message\n              message={message}\n              key={message.id} />\n          ))} */}\n        </div>\n        <MessageForm onSubmit={addMessage} />\n        <User\n          modalUserActive={modalUserActive}\n          setModalUserActive={setModalUserActive}\n        />\n      </div>\n    </UserContext.Provider >\n  )\n}\n","import React from 'react';\nimport { Chat } from '../components/Chat';\n\nexport function ChatPage() {\n  return (\n    <>\n      <Chat />\n    </>\n  )\n}","\nimport React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { StartPage } from './pages/StartPage';\nimport { CreateChat } from './pages/CreateChat';\nimport { ChatPage } from './pages/ChatPage';\nimport { ChatContext } from './context';\n// import { v4 as uuidv4 } from 'uuid';\nimport './App.scss';\n\nfunction App() {\n  const [chat, setChat] = useState({\n    chatName: '',\n    chatDiscription: '',\n    id: '',\n  });\n  const handlerChatName = (value) => setChat(prevChat => ({ ...prevChat, chatName: value }));\n  const handlerChatDiscription = (value) => setChat(prevChat => ({ ...prevChat, chatDiscription: value }));\n  const handlerChatId = (valueId) => setChat(prevChat => ({ ...prevChat, id: valueId }));\n  console.log(chat)\n  return (\n    <ChatContext.Provider value={{ chat, handlerChatName, handlerChatDiscription, handlerChatId }}>\n      <Switch>\n        <Route exact path={'/'} component={StartPage} />\n        <Route exact path={'/welcome'} component={CreateChat} />\n        <Route exact path={'/chat/:chatId'} component={ChatPage} />\n      </Switch>\n    </ChatContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}