{"version":3,"sources":["images/eye.svg","images/eye-slash.svg","components/LogIn/LogIn.jsx","pages/StartPage.js","components/ModalChatCreate/ModalChatCreate.jsx","components/Welcome/Welcome.jsx","pages/CreateChat.js","components/User/User.jsx","components/Chat/Chat.jsx","pages/ChatPage.js","App.js","index.js"],"names":["LogIn","useState","validateAfterSubmit","setValidateAfterSubmit","visiblePassword","setVisiblityPassword","validationsShema","yup","shape","email","required","password","min","history","useHistory","className","initialValues","validateOnBlur","validateOnChange","validationSchema","onSubmit","push","values","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","classNames","type","name","placeholder","value","onChange","onBlur","onClick","visiblity","src","eye","alt","eyeSlash","disabled","StartPage","ModalChatCreate","active","setActive","channelName","setChannelName","channelDiscription","setChannelDiscription","element","stopPropagation","action","target","Welcome","modalActive","setModalActive","CreateChat","User","modalUserActive","setModalUserActive","userName","setUserName","lastUserName","setLastUserName","Chat","setValue","to","event","preventDefault","ChatPage","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.160074bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eye.8e7e265e.svg\";","export default __webpack_public_path__ + \"static/media/eye-slash.0bed875c.svg\";","import React, { useState } from 'react';\nimport { Formik } from \"formik\";\nimport classNames from \"classnames\";\nimport * as yup from \"yup\";\nimport eye from \"../../images/eye.svg\";\nimport eyeSlash from \"../../images/eye-slash.svg\";\nimport { useHistory } from 'react-router-dom';\nimport './LogIn.scss';\n\nexport function LogIn() {\n  const [validateAfterSubmit, setValidateAfterSubmit] = useState(false);\n  const [visiblePassword, setVisiblityPassword] = useState(false);\n\n  const validationsShema = yup.object().shape({\n    email: yup.string().email(\"Email address is invalid\").required(\"Email required\"),\n    password: yup.string().required('This field is required.')\n      .min(6, 'Password should be 6 chars minimum.'),\n  });\n\n  let history = useHistory();\n\n  return (\n    <div className=\"container\">\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validateOnBlur={false}\n        validateOnChange={validateAfterSubmit}\n        validationSchema={validationsShema}\n        onSubmit={() => { history.push('/welcome') }}\n      >\n        {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\n          <form\n            className=\"form\"\n            onSubmit={handleSubmit}\n          >\n            <div className=\"form__inputs\">\n              <label className=\"form__label\">E-mail</label>\n              <input\n                className={classNames(\"form__input\", {\n                  \"form__input-err\": errors.email && touched.email,\n                })}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.email && touched.email && <p className=\"form__input-error\">{errors.email}</p>}\n            </div>\n            <div className=\"form__inputs\">\n              <label className=\"form__label\">Create Password</label>\n              <input\n                className={classNames(\"form__input\", {\n                  \"form__input-err\": errors.password && touched.password,\n                })}\n                type={visiblePassword ? \"text\" : \"password\"}\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <div\n                onClick={() => setVisiblityPassword(visiblity => !visiblity)}\n                className=\"form__input-icon\"\n              >\n                {visiblePassword\n                  ? <img src={eye} alt=\"show\" />\n                  : <img src={eyeSlash} alt=\"hide\" />\n                }\n              </div>\n              {errors.password && touched.password && <p className=\"form__input-error\">{errors.password}</p>}\n            </div>\n            <button\n              disabled={!isValid && !dirty}\n              className=\"form__input-btn\"\n              type=\"submit\"\n              onClick={() => {\n                setValidateAfterSubmit(true);\n              }}\n            >\n              Login\n            </button>\n          </form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React from 'react';\nimport { LogIn } from '../components/LogIn';\n\nexport function StartPage() {\n  return (\n    <>\n      <LogIn />\n    </>\n  )\n}","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./ModalChatCreate.scss\";\n\nexport function ModalChatCreate({ active, setActive }) {\n  const [channelName, setChannelName] = useState('');\n  const [channelDiscription, setChannelDiscription] = useState('');\n\n  let history = useHistory();\n\n  // const makeNewChannel = (event) => {\n  //   event.preventDefault();\n  // };\n\n  const handlerChannelName = ({ target }) => {\n    setChannelName(target.channelName);\n  };\n\n  const handlerChannelDiscription = ({ target }) => {\n    setChannelDiscription(target.channelDiscription);\n  };\n\n  return (\n    <div\n      className={active ? \"modal modal--active\" : \"modal\"}\n      onClick={() => setActive(false)}\n    >\n      <div\n        className={active ? \"modal__content modal__content--active\" : \"modal__content\"}\n        onClick={element => element.stopPropagation()}\n      >\n        <h2 className=\"modal__title\">New channel</h2>\n        <form\n          action=\"\"\n          className=\"form\"\n          onSubmit={() => { history.push('/chat') }}\n        >\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={channelName}\n            onChange={handlerChannelName}\n            placeholder=\"Channel tittle...\"\n            required\n          />\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={channelDiscription}\n            onChange={handlerChannelDiscription}\n            placeholder=\"Channel description\"\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"modal__button\"\n          >\n            Create\n          </button>\n        </form>\n        <button\n          className=\"modal__button modal__button--close\"\n          type=\"button\"\n          onClick={() => setActive(false)}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  )\n};","import React, { useState } from 'react';\nimport { ModalChatCreate } from '../ModalChatCreate';\nimport './Welcome.scss';\n\nexport function Welcome() {\n  const [modalActive, setModalActive] = useState(false);\n\n  return (\n    <div className=\"container\">\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={() => setModalActive(true)}\n      >\n        Create a channel\n      </button>\n      <h1>Welcome to awesome chat</h1>\n      <ModalChatCreate\n        active={modalActive}\n        setActive={setModalActive}\n      />\n    </div>\n  )\n}\n\n","import React from 'react';\nimport { Welcome } from '../components/Welcome/Welcome';\n\nexport function CreateChat() {\n  return (\n    <>\n      <Welcome />\n    </>\n  )\n}","import React, { useState } from 'react';\nimport \"./User.scss\";\n\nexport function User({ modalUserActive, setModalUserActive }) {\n  const [userName, setUserName] = useState('');\n  const [lastUserName, setLastUserName] = useState('');\n\n  // const makeNewChannel = (event) => {\n  //   event.preventDefault();\n  // };\n\n  const handlerUserName = ({ target }) => {\n    setUserName(target.userName);\n  };\n\n  const handlerLastUserName = ({ target }) => {\n    setLastUserName(target.lastUserName);\n  };\n\n  return (\n    <div\n      className={modalUserActive ? \"user user--active\" : \"user\"}\n      onClick={() => setModalUserActive(false)}\n    >\n      <div\n        className={modalUserActive ? \"modal__content modal__content--active\" : \"modal__content\"}\n        onClick={element => element.stopPropagation()}\n      >\n        <h2 className=\"modal__title\">User</h2>\n        <form\n          action=\"\"\n          className=\"form\"\n        >\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={userName}\n            onChange={handlerUserName}\n            placeholder=\"Name\"\n            required\n          />\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastUserName}\n            onChange={handlerLastUserName}\n            placeholder=\"Last name\"\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"modal__button\"\n          >\n            Create\n          </button>\n        </form>\n        <button\n          className=\"modal__button modal__button--close\"\n          type=\"button\"\n          onClick={() => setModalUserActive(false)}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  )\n};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { User } from '../User';\nimport { FaUserCog } from 'react-icons/fa';\nimport './Chat.scss';\n\nexport function Chat() {\n  const [modalUserActive, setModalUserActive] = useState(false);\n  const [value, setValue] = useState('');\n\n  const makeNewMessag = (event) => {\n    event.preventDefault();\n\n    // if (value) {\n    //   dispatch(addMessage({\n    //     title: value,\n    //     id: 234234,\n    //     currentTime: `${new Date().toLocaleTimeString()}`,\n    //   }));\n\n    //   setValue('');\n    // }\n  };\n\n  const onChange = ({ target }) => {\n    setValue(target.value);\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <h2 className=\"title\">Chat</h2>\n        <FaUserCog\n          onClick={() => setModalUserActive(true)}\n          className='icon-style'\n        />\n        <Link\n          to='/'\n          className='chat__btn'\n        >\n          Logout\n        </Link>\n      </div>\n      <div className=\"chat__input\">\n\n      </div>\n      <form\n        action=\"\"\n        className=\"chat__form\"\n        onSubmit={makeNewMessag}\n        value={value}\n      >\n        <input\n          className=\"chat__input--text\"\n          value={value}\n          onChange={onChange}\n        />\n        <button\n          className=\"chat__btn\"\n        >\n          Send\n        </button>\n      </form>\n      <User\n        modalUserActive={modalUserActive}\n        setModalUserActive={setModalUserActive}\n      />\n    </div>\n  )\n}\n","import React from 'react';\nimport { Chat } from '../components/Chat';\n\nexport function ChatPage() {\n  return (\n    <>\n      <Chat />\n    </>\n  )\n}","\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { StartPage } from './pages/StartPage';\nimport { CreateChat } from './pages/CreateChat';\nimport { ChatPage } from './pages/ChatPage';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path={'/'} component={StartPage} />\n        <Route exact path={'/welcome'} component={CreateChat} />\n        <Route exact path={'/chat'} component={ChatPage} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}